// Generated automatically by nearley, version 2.15.1
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "Script$ebnf$1$subexpression$1", "symbols": ["Block"]},
    {"name": "Script$ebnf$1$subexpression$1", "symbols": ["Lines"]},
    {"name": "Script$ebnf$1", "symbols": ["Script$ebnf$1$subexpression$1"]},
    {"name": "Script$ebnf$1$subexpression$2", "symbols": ["Block"]},
    {"name": "Script$ebnf$1$subexpression$2", "symbols": ["Lines"]},
    {"name": "Script$ebnf$1", "symbols": ["Script$ebnf$1", "Script$ebnf$1$subexpression$2"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Script", "symbols": ["___", "Script$ebnf$1", "___"]},
    {"name": "Block$string$1", "symbols": [{"literal":"l"}, {"literal":"u"}, {"literal":"m"}, {"literal":"o"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Block$string$2", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"x"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Block", "symbols": ["___", "Block$string$1", "Lines", "Block$string$2", "___"]},
    {"name": "Lines$ebnf$1", "symbols": []},
    {"name": "Lines$ebnf$1$subexpression$1$ebnf$1", "symbols": [/["."]/], "postprocess": id},
    {"name": "Lines$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "Lines$ebnf$1$subexpression$1", "symbols": ["___", "Spell", "Lines$ebnf$1$subexpression$1$ebnf$1", "t_newline"]},
    {"name": "Lines$ebnf$1", "symbols": ["Lines$ebnf$1", "Lines$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Lines$ebnf$2", "symbols": [/["."]/], "postprocess": id},
    {"name": "Lines$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "Lines", "symbols": ["Lines$ebnf$1", "___", "Spell", "Lines$ebnf$2", "___"]},
    {"name": "Spell", "symbols": ["Declare"]},
    {"name": "Spell", "symbols": ["Read"]},
    {"name": "Spell", "symbols": ["Print"]},
    {"name": "Spell", "symbols": ["Conditional"]},
    {"name": "Spell", "symbols": ["Loop"]},
    {"name": "Read$string$1", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"g"}, {"literal":"i"}, {"literal":"l"}, {"literal":"i"}, {"literal":"m"}, {"literal":"e"}, {"literal":"n"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Read", "symbols": ["Read$string$1", "_", {"literal":"("}, "_", "Id", "_", {"literal":")"}]},
    {"name": "Print$string$1", "symbols": [{"literal":"r"}, {"literal":"e"}, {"literal":"v"}, {"literal":"e"}, {"literal":"l"}, {"literal":"i"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Print$subexpression$1", "symbols": ["Id"]},
    {"name": "Print$subexpression$1", "symbols": ["Text"]},
    {"name": "Print", "symbols": ["Print$string$1", "_", {"literal":"("}, "_", "Print$subexpression$1", "_", {"literal":")"}]},
    {"name": "Declare$string$1", "symbols": [{"literal":"f"}, {"literal":"i"}, {"literal":"d"}, {"literal":"e"}, {"literal":"l"}, {"literal":"i"}, {"literal":"u"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Declare$subexpression$1", "symbols": ["IdList"]},
    {"name": "Declare$subexpression$1", "symbols": ["AtribututionList"]},
    {"name": "Declare", "symbols": ["Declare$string$1", "__", "Declare$subexpression$1"]},
    {"name": "IdList$ebnf$1", "symbols": []},
    {"name": "IdList$ebnf$1$subexpression$1", "symbols": ["Id", "_", {"literal":","}, "_"]},
    {"name": "IdList$ebnf$1", "symbols": ["IdList$ebnf$1", "IdList$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "IdList", "symbols": ["IdList$ebnf$1", "Id"]},
    {"name": "AtribututionList$ebnf$1", "symbols": []},
    {"name": "AtribututionList$ebnf$1$subexpression$1", "symbols": ["Secret", "_", {"literal":","}, "_"]},
    {"name": "AtribututionList$ebnf$1", "symbols": ["AtribututionList$ebnf$1", "AtribututionList$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "AtribututionList", "symbols": ["AtribututionList$ebnf$1", "Secret"]},
    {"name": "Secret$string$1", "symbols": [{"literal":"t"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Secret", "symbols": ["Value", "__", "Secret$string$1", "__", "Id"]},
    {"name": "Conditional$string$1", "symbols": [{"literal":"e"}, {"literal":"x"}, {"literal":"p"}, {"literal":"e"}, {"literal":"c"}, {"literal":"t"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Conditional$ebnf$1$subexpression$1$string$1", "symbols": [{"literal":"e"}, {"literal":"x"}, {"literal":"p"}, {"literal":"u"}, {"literal":"l"}, {"literal":"s"}, {"literal":"o"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Conditional$ebnf$1$subexpression$1", "symbols": ["Conditional$ebnf$1$subexpression$1$string$1", "Block"]},
    {"name": "Conditional$ebnf$1", "symbols": ["Conditional$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "Conditional$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "Conditional", "symbols": ["Conditional$string$1", "_", "Expression", "_", "Relational_Op", "_", "Expression", "Block", "Conditional$ebnf$1"]},
    {"name": "Loop$string$1", "symbols": [{"literal":"i"}, {"literal":"n"}, {"literal":"c"}, {"literal":"a"}, {"literal":"r"}, {"literal":"c"}, {"literal":"e"}, {"literal":"r"}, {"literal":"o"}, {"literal":"u"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Loop", "symbols": ["Loop$string$1", "_", "Expression", "_", "Relational_Op", "_", "Expression", "Block"]},
    {"name": "Relational_Op$string$1", "symbols": [{"literal":"g"}, {"literal":"r"}, {"literal":"e"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"r"}, {"literal":" "}, {"literal":"t"}, {"literal":"h"}, {"literal":"a"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$1"]},
    {"name": "Relational_Op$string$2", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"s"}, {"literal":"s"}, {"literal":" "}, {"literal":"t"}, {"literal":"h"}, {"literal":"a"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$2"]},
    {"name": "Relational_Op$string$3", "symbols": [{"literal":"g"}, {"literal":"r"}, {"literal":"e"}, {"literal":"a"}, {"literal":"t"}, {"literal":"e"}, {"literal":"r"}, {"literal":" "}, {"literal":"o"}, {"literal":"r"}, {"literal":" "}, {"literal":"e"}, {"literal":"q"}, {"literal":"u"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$3"]},
    {"name": "Relational_Op$string$4", "symbols": [{"literal":"l"}, {"literal":"e"}, {"literal":"s"}, {"literal":"s"}, {"literal":" "}, {"literal":"o"}, {"literal":"r"}, {"literal":" "}, {"literal":"e"}, {"literal":"q"}, {"literal":"u"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$4"]},
    {"name": "Relational_Op$string$5", "symbols": [{"literal":"n"}, {"literal":"o"}, {"literal":"t"}, {"literal":" "}, {"literal":"i"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$5"]},
    {"name": "Relational_Op$string$6", "symbols": [{"literal":"i"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "Relational_Op", "symbols": ["Relational_Op$string$6"]},
    {"name": "Expression$ebnf$1", "symbols": []},
    {"name": "Expression$ebnf$1$subexpression$1$subexpression$1", "symbols": [{"literal":"+"}]},
    {"name": "Expression$ebnf$1$subexpression$1$subexpression$1", "symbols": [{"literal":"-"}]},
    {"name": "Expression$ebnf$1$subexpression$1", "symbols": ["_", "Expression$ebnf$1$subexpression$1$subexpression$1", "_", "Term"]},
    {"name": "Expression$ebnf$1", "symbols": ["Expression$ebnf$1", "Expression$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Expression", "symbols": ["Term", "Expression$ebnf$1"]},
    {"name": "Term$ebnf$1", "symbols": []},
    {"name": "Term$ebnf$1$subexpression$1$subexpression$1", "symbols": [{"literal":"*"}]},
    {"name": "Term$ebnf$1$subexpression$1$subexpression$1", "symbols": [{"literal":"/"}]},
    {"name": "Term$ebnf$1$subexpression$1", "symbols": ["Term$ebnf$1$subexpression$1$subexpression$1", "Value"]},
    {"name": "Term$ebnf$1", "symbols": ["Term$ebnf$1", "Term$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Term", "symbols": ["Value", "Term$ebnf$1"]},
    {"name": "Value", "symbols": ["Number"]},
    {"name": "Value", "symbols": ["Id"]},
    {"name": "Value", "symbols": [{"literal":"("}, "_", "Expression", "_", {"literal":")"}]},
    {"name": "Text$ebnf$1", "symbols": [/[ a-zA-Z0-9]/]},
    {"name": "Text$ebnf$1", "symbols": ["Text$ebnf$1", /[ a-zA-Z0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Text", "symbols": [{"literal":"\""}, "Text$ebnf$1", {"literal":"\""}]},
    {"name": "Id$ebnf$1", "symbols": [/[a-zA-Z]/]},
    {"name": "Id$ebnf$1", "symbols": ["Id$ebnf$1", /[a-zA-Z]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Id", "symbols": ["Id$ebnf$1"]},
    {"name": "Number$ebnf$1", "symbols": [/[0-9]/]},
    {"name": "Number$ebnf$1", "symbols": ["Number$ebnf$1", /[0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "Number", "symbols": ["Number$ebnf$1"]},
    {"name": "t_newline", "symbols": [/[\n\r]/]},
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["_$ebnf$1", /[\s\t]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "_", "symbols": ["_$ebnf$1"]},
    {"name": "__$ebnf$1", "symbols": [/[\s\t]/]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", /[\s\t]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"]},
    {"name": "___$ebnf$1", "symbols": []},
    {"name": "___$ebnf$1", "symbols": ["___$ebnf$1", /[\s\t\n\r]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "___", "symbols": ["___$ebnf$1"]}
]
  , ParserStart: "Script"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
